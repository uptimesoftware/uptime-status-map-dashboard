<?php
// up.time Controller Connection Info
// This will save the up.time Controller Info as well as the UI info
// uptime software 2012
// author: Joel Pereira

// uptimeController CLASS
// Use:
// uptimeController::load_controller_info($options);
// uptimeController::save_controller_info($options);
class uptimeController {
// conf file
private static $uptime_controller_conf_file = "uptime_controller.conf";

// save file
function save_controller_info($options) {
	// array keys:
	// controller_hostname
	// controller_username
	// controller_password
	// controller_port
	// controller_ssl
	// controller_version
	// uptime_ui_hostname
	// uptime_ui_port
	// uptime_ui_ssl
	
	// just overwrite file with new options
	$newline = "\n";
	if (preg_match("/^win/", strtolower(php_uname("s")))) {		// Windows platform
		$newline = "\r\n";
	}
	$fh = fopen(self::$uptime_controller_conf_file, 'w') or die("Couldn't save file '" . self::$uptime_controller_conf_file . "'"); // overwrite file
	$data = "# This file is auto-generated by uptime{$newline}";
	fwrite($fh, $data);
	$data = "controller_hostname={$options['controller_hostname']}{$newline}";
	fwrite($fh, $data);
	$data = "controller_username={$options['controller_username']}{$newline}";
	fwrite($fh, $data);
	$data = "controller_password={$options['controller_password']}{$newline}";
	fwrite($fh, $data);
	$data = "controller_port={$options['controller_port']}{$newline}";
	fwrite($fh, $data);
	$data = "controller_ssl={$options['controller_ssl']}{$newline}";
	fwrite($fh, $data);
	$data = "controller_version={$options['controller_version']}{$newline}";
	fwrite($fh, $data);
	$data = "uptime_ui_hostname={$options['uptime_ui_hostname']}{$newline}";
	fwrite($fh, $data);
	$data = "uptime_ui_port={$options['uptime_ui_port']}{$newline}";
	fwrite($fh, $data);
	$data = "uptime_ui_ssl={$options['uptime_ui_ssl']}{$newline}";
	fwrite($fh, $data);
	fclose($fh);
}

// load file
function load_controller_info($options) {
	$fh = fopen(self::$uptime_controller_conf_file, 'r') or die("Couldn't read file '" . self::$uptime_controller_conf_file . "'");
	while (($buffer = fgets($fh, 4096)) !== false) {
		if ( preg_match("/^.*[=].*$/", $buffer) ) {
			// split line by "="
			$arr = explode('=', trim($buffer), 2);
			// set key/var
			$key = $arr[0];
			$val = $arr[1];
			// special cases for the two booleans
			if ($key == "controller_ssl" || $key == "uptime_ui_ssl") {
				if ($val == 1) {	// SSL = true
					$val = true;
				}
				else {		// SSL = false
					$val = false;
				}
			}
			$options[$key] = $val;
		}
    }
	fclose($fh);
	return $options;
}

}
?>
